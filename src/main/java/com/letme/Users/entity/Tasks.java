package com.letme.Users.entity;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.Date;

/**
 * Created by mbajwa11 on 12/30/16.
 */
@Table(name = "users_info")
@Entity
public class Tasks {
    // An autogenerated id (unique for each user in the db)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;

    @NotNull
    @Column(name= "name")
    private String name;

    @NotNull
    @Column(name= "type_id")
    private Long type_id;

    @Column(name= "description")
    private String desc;

    @NotNull
    @Column(name= "created_date")
    private Date created_date;

    @NotNull
    @Column(name= "expire_date")
    private Date expire_date;

    @NotNull
    @Column(name= "budget")
    private Integer budget;

    @NotNull
    @Column(name= "street_add")
    private String street_add;

    @NotNull
    @Column(name= "city_id")
    private Integer city_id;

    @NotNull
    @Column(name= "country_id")
    private String city;

    @NotNull
    @Column(name= "zip")
    private Long zip;

    @NotNull
    @Column(name= "status")

    private Integer status;

    @NotNull
    @Column(name= "active")
    private boolean active;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Long getType_id() {
        return type_id;
    }

    public void setType_id(Long type_id) {
        this.type_id = type_id;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    public Date getCreated_date() {
        return created_date;
    }

    public void setCreated_date(Date created_date) {
        this.created_date = created_date;
    }

    public Date getExpire_date() {
        return expire_date;
    }

    public void setExpire_date(Date expire_date) {
        this.expire_date = expire_date;
    }

    public Integer getBudget() {
        return budget;
    }

    public void setBudget(Integer budget) {
        this.budget = budget;
    }

    public String getStreet_add() {
        return street_add;
    }

    public void setStreet_add(String street_add) {
        this.street_add = street_add;
    }

    public Integer getCity_id() {
        return city_id;
    }

    public void setCity_id(Integer city_id) {
        this.city_id = city_id;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Long getZip() {
        return zip;
    }

    public void setZip(Long zip) {
        this.zip = zip;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    @Override
    public String toString() {
        return "Tasks{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", type_id=" + type_id +
                ", desc='" + desc + '\'' +
                ", created_date=" + created_date +
                ", expire_date=" + expire_date +
                ", budget=" + budget +
                ", street_add='" + street_add + '\'' +
                ", city_id=" + city_id +
                ", city='" + city + '\'' +
                ", zip=" + zip +
                ", status=" + status +
                ", active=" + active +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Tasks)) return false;

        Tasks tasks = (Tasks) o;

        if (id != tasks.id) return false;
        if (active != tasks.active) return false;
        if (name != null ? !name.equals(tasks.name) : tasks.name != null) return false;
        if (type_id != null ? !type_id.equals(tasks.type_id) : tasks.type_id != null) return false;
        if (desc != null ? !desc.equals(tasks.desc) : tasks.desc != null) return false;
        if (created_date != null ? !created_date.equals(tasks.created_date) : tasks.created_date != null) return false;
        if (expire_date != null ? !expire_date.equals(tasks.expire_date) : tasks.expire_date != null) return false;
        if (budget != null ? !budget.equals(tasks.budget) : tasks.budget != null) return false;
        if (street_add != null ? !street_add.equals(tasks.street_add) : tasks.street_add != null) return false;
        if (city_id != null ? !city_id.equals(tasks.city_id) : tasks.city_id != null) return false;
        if (city != null ? !city.equals(tasks.city) : tasks.city != null) return false;
        if (zip != null ? !zip.equals(tasks.zip) : tasks.zip != null) return false;
        return status != null ? status.equals(tasks.status) : tasks.status == null;
    }

    @Override
    public int hashCode() {
        int result = (int) (id ^ (id >>> 32));
        result = 31 * result + (name != null ? name.hashCode() : 0);
        result = 31 * result + (type_id != null ? type_id.hashCode() : 0);
        result = 31 * result + (desc != null ? desc.hashCode() : 0);
        result = 31 * result + (created_date != null ? created_date.hashCode() : 0);
        result = 31 * result + (expire_date != null ? expire_date.hashCode() : 0);
        result = 31 * result + (budget != null ? budget.hashCode() : 0);
        result = 31 * result + (street_add != null ? street_add.hashCode() : 0);
        result = 31 * result + (city_id != null ? city_id.hashCode() : 0);
        result = 31 * result + (city != null ? city.hashCode() : 0);
        result = 31 * result + (zip != null ? zip.hashCode() : 0);
        result = 31 * result + (status != null ? status.hashCode() : 0);
        result = 31 * result + (active ? 1 : 0);
        return result;
    }
}
